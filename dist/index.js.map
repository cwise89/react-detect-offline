{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport {\n\tPingType,\n\tIsPollingType,\n\tGetPollingConfigType,\n\tUseOnlineEffectType,\n} from './types';\n\nexport const needsPolling: IsPollingType = navigator => {\n\t// these browsers don't fully support navigator.onLine, so we need to use a polling backup\n\tconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/;\n\n\tif (\n\t\ttypeof navigator !== 'undefined' &&\n\t\tunsupportedUserAgentsPattern.test(navigator.userAgent)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nexport const ping: PingType = ({ url, timeout }) => {\n\treturn new Promise(resolve => {\n\t\tconst isOnline = () => resolve(true);\n\t\tconst isOffline = () => resolve(false);\n\n\t\tconst xhr = new XMLHttpRequest();\n\n\t\txhr.onerror = isOffline;\n\t\txhr.ontimeout = isOffline;\n\t\txhr.onreadystatechange = () => {\n\t\t\tif (xhr.readyState === xhr.HEADERS_RECEIVED) {\n\t\t\t\tif (xhr.status) {\n\t\t\t\t\tisOnline();\n\t\t\t\t} else {\n\t\t\t\t\tisOffline();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\txhr.open('HEAD', url);\n\t\txhr.timeout = timeout;\n\t\txhr.send();\n\t});\n};\n\nconst getPollingConfigs: GetPollingConfigType = (\n\tpollingConfig,\n\tneedsPolling\n) => {\n\tconst defaultConfig = {\n\t\tenabled: true,\n\t\turl: 'https://ipv4.icanhazip.com/',\n\t\ttimeout: 5000,\n\t\tinterval: 5000,\n\t};\n\n\tif (\n\t\t(typeof pollingConfig === 'object' && pollingConfig.enabled === true) ||\n\t\t(needsPolling === true && typeof pollingConfig === 'object')\n\t) {\n\t\treturn { ...defaultConfig, ...pollingConfig };\n\t} else if (pollingConfig === true || needsPolling) {\n\t\treturn { ...defaultConfig };\n\t} else {\n\t\treturn { enabled: false };\n\t}\n};\n\nexport const useOnlineEffect: UseOnlineEffectType = (\n\tcallback,\n\tpollingOptions = {}\n) => {\n\tconst goOnline = () => {\n\t\tcallback(true);\n\t};\n\n\tconst goOffline = () => {\n\t\tcallback(false);\n\t};\n\n\t// does the browser support navigator.onLine CORRECTLY?\n\tconst mustPoll = needsPolling(navigator);\n\n\tconst { enabled, ...pingConfig } = getPollingConfigs(\n\t\tpollingOptions,\n\t\tmustPoll\n\t);\n\n\tuseEffect(() => {\n\t\t// initial online event fired.\n\t\tcallback(true);\n\n\t\twindow.addEventListener('online', goOnline);\n\t\twindow.addEventListener('offline', goOffline);\n\n\t\t// initialize setInterval id so we can clean up on unmount.\n\t\tlet intervalId: number | undefined;\n\n\t\t// if we are polling for online status, set up the setInterval.\n\t\tif ((mustPoll || enabled) && 'url' in pingConfig) {\n\t\t\tconst { url, timeout, interval } = pingConfig;\n\n\t\t\tsetInterval(() => {\n\t\t\t\tping({\n\t\t\t\t\turl,\n\t\t\t\t\ttimeout,\n\t\t\t\t}).then(online => (online ? goOnline() : goOffline()));\n\t\t\t}, interval);\n\t\t}\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('online', goOnline);\n\t\t\twindow.removeEventListener('offline', goOffline);\n\n\t\t\tif (mustPoll || enabled) {\n\t\t\t\tclearInterval(intervalId);\n\t\t\t}\n\t\t};\n\t}, []);\n};\n"],"names":["useEffect"],"mappings":"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"}